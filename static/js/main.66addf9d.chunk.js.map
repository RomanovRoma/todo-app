{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","todo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleDone","onToggleImportant","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoitem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"kVAEeA,G,MCCG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACxB,OACE,sBAAKC,UAAU,oBAAf,UACE,2CACA,+BAAKF,EAAL,gBAAwBC,EAAxB,gBCLSE,G,kNCGbC,MAAQ,CACNC,KAAM,I,EAGRC,eAAiB,SAACC,GAChB,IAAMF,EAAOE,EAAEC,OAAOC,MACtB,EAAKC,SAAS,CAAEL,SAChB,EAAKM,MAAML,eAAeD,I,uDAI1B,OAAO,uBAAOO,KAAK,OACLV,UAAU,4BACVW,YAAY,iBACZJ,MAAOK,KAAKV,MAAMC,KAClBU,SAAUD,KAAKR,qB,GAjBQU,c,QCD1BC,G,6KCGH,IAAD,EAKmBH,KAAKH,MAHvBO,EAFD,EAECA,MAAOC,EAFR,EAEQA,UACTC,EAHC,EAGDA,aACAC,EAJC,EAIDA,kBAGFC,EAAa,iBASjB,OAhBO,EAKDrB,OAIJqB,GAAc,SATT,EAKKC,YAQVD,GAAc,cAId,uBAAMpB,UAAWoB,EAAjB,UACE,sBAAMpB,UAAU,uBACdsB,QAAUJ,EADZ,SAEGF,IAGH,wBAAQN,KAAK,SACXV,UAAU,6CACVsB,QAAUH,EAFZ,SAGE,mBAAGnB,UAAU,wBAGf,wBAAQU,KAAK,SACXV,UAAU,4CACVsB,QAASL,EAFX,SAGE,mBAAGjB,UAAU,2B,GAlCmBc,cCD3BS,G,MCEE,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOP,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAE5CM,EAAWD,EAAME,KAAI,SAACC,GAAU,IAE5BC,EAAqBD,EAArBC,GAAOC,EAFoB,YAENF,EAFM,QAInC,OACE,oBAAa3B,UAAU,kBAAvB,SACE,cAAC,EAAD,2BACO6B,GADP,IAEEZ,UAAW,kBAAMA,EAAUW,IAC3BV,aAAc,kBAAMA,EAAaU,IACjCT,kBAAmB,kBAAMA,EAAkBS,QALtCA,MAWb,OACE,oBAAI5B,UAAU,uBAAd,SACIyB,MCtBOK,G,kNCIbC,QAAU,CACR,CAAEC,KAAM,MAAOhB,MAAO,OACtB,CAAEgB,KAAM,SAAUhB,MAAO,UACzB,CAAEgB,KAAM,OAAQhB,MAAO,S,uDAGf,IAAD,EAE4BJ,KAAKH,MAAhCwB,EAFD,EAECA,OAAQC,EAFT,EAESA,eAEVH,EAAUnB,KAAKmB,QAAQL,KAAI,YAAoB,IAAlBM,EAAiB,EAAjBA,KAAMhB,EAAW,EAAXA,MAEjCmB,EADWF,IAAWD,EACH,WAAa,wBACtC,OACE,wBAAQtB,KAAK,SACLV,UAAS,cAASmC,GAElBb,QAAS,kBAAMY,EAAeF,IAHtC,SAIGhB,GAFUgB,MAOjB,OACE,qBAAKhC,UAAU,YAAf,SACG+B,Q,GA3BqCjB,cCF/BsB,G,kNCIblC,MAAQ,CACNc,MAAO,I,EAGTqB,cAAgB,SAAChC,GACf,EAAKG,SAAS,CACZQ,MAAOX,EAAEC,OAAOC,S,EAIpB+B,SAAW,SAACjC,GACVA,EAAEkC,iBACF,EAAK9B,MAAM+B,YAAY,EAAKtC,MAAMc,OAClC,EAAKR,SAAS,CACZQ,MAAO,M,uDAMT,OACE,uBAAMhB,UAAU,uBACVsC,SAAU1B,KAAK0B,SADrB,UAEE,uBAAO5B,KAAK,OACLV,UAAU,eACVa,SAAUD,KAAKyB,cACf1B,YAAY,wBACZJ,MAAOK,KAAKV,MAAMc,QACzB,wBACEhB,UAAU,4BADZ,6B,GA9BiCc,cCF1B2B,G,kNCUbC,MAAQ,G,EAERxC,MAAQ,CACNyC,SAAU,CACR,EAAKC,eAAe,eACpB,EAAKA,eAAe,iBACpB,EAAKA,eAAe,cAEtBzC,KAAM,GACN8B,OAAQ,O,EAYVY,WAAa,SAACjB,GACZ,EAAKpB,UAAS,YAAiB,IAAfmC,EAAc,EAAdA,SAERG,EAAMH,EAASI,WAAU,SAACC,GAAD,OAAQA,EAAGpB,KAAOA,KAOjD,MAAO,CACLe,SANY,sBACTA,EAASM,MAAM,EAAGH,IADT,YAETH,EAASM,MAAMH,EAAM,U,EAS9BI,QAAU,SAACC,GACT,IAAMC,EAAU,EAAKR,eAAeO,GAEpC,EAAK3C,UAAS,YAAiB,IAAfmC,EAAc,EAAdA,SAMd,MAAO,CACLA,SANU,sBACPA,GADO,CAEVS,S,EA2BNjC,kBAAoB,SAACS,GACnB,EAAKpB,UAAS,YAAmB,IAAhBmC,EAAe,EAAfA,SACf,MAAO,CACLA,SAAU,EAAKU,eAAeV,EAAUf,EAAI,kB,EAKlDV,aAAe,SAACU,GACd,EAAKpB,UAAS,YAAiB,IAAfmC,EAAc,EAAdA,SACd,MAAO,CACLA,SAAU,EAAKU,eAAeV,EAAUf,EAAI,a,EAKlDxB,eAAiB,SAACD,GAChB,EAAKK,SAAS,CAAEL,U,EAGlB+B,eAAiB,SAACD,GAChB,EAAKzB,SAAS,CAAEyB,Y,6DA/EHjB,GACb,MAAO,CACLA,QACAK,WAAW,EACXtB,MAAM,EACN6B,GAAIhB,KAAK8B,W,qCAmCEY,EAAK1B,EAAI2B,GACtB,IAAMT,EAAMQ,EAAIP,WAAU,SAACC,GAAD,OAAQA,EAAGpB,KAAOA,KAGtC4B,EAAUF,EAAIR,GACdM,EAAO,2BACRI,GADQ,kBAEVD,GAAYC,EAAQD,KAIvB,MAAM,GAAN,mBACKD,EAAIL,MAAM,EAAGH,IADlB,CAEEM,GAFF,YAGKE,EAAIL,MAAMH,EAAM,O,6BA4BhBQ,EAAKnD,GACV,OAAmB,IAAhBA,EAAKsD,OACCH,EAGFA,EAAIrB,QAAO,SAACe,GAAD,OAAQA,EAAGhC,MAAM0C,cAAcC,QAAQxD,EAAKuD,gBAAkB,O,6BAG3EJ,EAAKrB,GAEV,OAAOA,GACL,IAAK,MACH,OAAOqB,EACT,IAAK,SACH,OAAOA,EAAIrB,QAAO,SAACe,GAAD,OAASA,EAAGjD,QAChC,IAAK,OACH,OAAOuD,EAAIrB,QAAO,SAACe,GAAD,OAAQA,EAAGjD,QAC/B,QACE,OAAOuD,K,+BAIH,IAAD,EAE4B1C,KAAKV,MAAhCyC,EAFD,EAECA,SAAUxC,EAFX,EAEWA,KAAM8B,EAFjB,EAEiBA,OAElB2B,EAAehD,KAAKqB,OAAOrB,KAAKiD,OAAOlB,EAAUxC,GAAO8B,GAExD6B,EAAYnB,EACCV,QAAO,SAACe,GAAD,OAAQA,EAAGjD,QAAM0D,OAErCM,EAAYpB,EAASc,OAASK,EAGpC,OACE,sBAAK9D,UAAU,WAAf,UACE,cAAC,EAAD,CAAWF,KAAMiE,EAAWhE,KAAM+D,IAClC,sBAAK9D,UAAU,mBAAf,UACE,cAAC,EAAD,CACEI,eAAgBQ,KAAKR,iBACvB,cAAC,EAAD,CACE6B,OAAQA,EACRC,eAAgBtB,KAAKsB,oBAEzB,cAAC,EAAD,CACEV,MAAOoC,EACP3C,UAAYL,KAAKiC,WACjB3B,aAAcN,KAAKM,aACnBC,kBAAmBP,KAAKO,oBAE1B,cAAC,EAAD,CAAaqB,YAAa5B,KAAKsC,iB,GAlJNpC,cCLjCkD,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.66addf9d.chunk.js","sourcesContent":["import AppHeader from './app-header'\n\nexport default AppHeader","import React from 'react'\nimport './app-header.css'\n\nconst AppHeader = ({todo, done}) => {\n  return (\n    <div className=\"app-header d-flex\" >\n      <h1>Todo List</h1>\n      <h2>{todo} more to do, {done} done</h2>\n    </div>\n  )\n}\n\nexport default AppHeader","import SearchPanel from './search-panel'\n\nexport default SearchPanel","import React, { Component } from 'react'\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  }\n\n  onSearchChange = (e) => {\n    const term = e.target.value\n    this.setState({ term })\n    this.props.onSearchChange(term)\n  }\n\n  render() {\n    return <input type=\"text\"\n                  className=\"form-control search-input\"\n                  placeholder=\"type to search\"\n                  value={this.state.term}\n                  onChange={this.onSearchChange} />\n  }\n}","import TodoListItem from './todo-list-item'\n\nexport default TodoListItem","import React, { Component } from 'react'\nimport './todo-list-item.css'\n\nexport default class TodoListItem extends Component {\n\n  render() {\n\n    const { label, onDeleted,\n          onToggleDone,\n          onToggleImportant,\n          done, important } = this.props\n\n    let classNames = 'todo-list-item'\n    if (done) {\n      classNames += ' done'\n    }\n\n    if (important) {\n      classNames += ' important'\n    }\n\n    return (\n      <span className={classNames} >\n        <span className=\"todo-list-item-label\"\n          onClick={ onToggleDone } >\n          {label}\n        </span>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={ onToggleImportant }>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={onDeleted} >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    )\n  }\n}","import TodoList from './todo-list'\n\nexport default TodoList","import React from 'react'\nimport TodoListItem from '../todo-list-item'\nimport './todo-list.css'\n\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\n\n  const elements = todos.map((item) => {\n\n    const { id, ...itemProps } = item\n\n    return (\n      <li key={id} className=\"list-group-item\" >\n        <TodoListItem\n          { ...itemProps }\n          onDeleted={() => onDeleted(id)}\n          onToggleDone={() => onToggleDone(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n        />\n      </li>\n    )\n  })\n\n  return (\n    <ul className=\"list-group todo-list\" >\n      { elements }\n    </ul>\n  )\n}\n\nexport default TodoList","import ItemStatusFilter from './item-status-filter'\n\nexport default ItemStatusFilter","import React, { Component } from 'react'\n\nimport './item-status-filter.css'\n\nexport default class ItemStatusFilter extends Component {\n\n  buttons = [\n    { name: 'all', label: 'All'},\n    { name: 'active', label: 'Active'},\n    { name: 'done', label: 'Done'}\n  ]\n\n  render() {\n\n    const { filter, onFilterChange } = this.props\n\n    const buttons = this.buttons.map(({name, label}) => {\n      const isActive = filter === name\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\n      return (\n        <button type=\"button\"\n                className={`btn ${clazz}`}\n                key={name}\n                onClick={() => onFilterChange(name)} >\n          {label}\n        </button>\n      )\n    })\n\n    return (\n      <div className=\"btn-group\" >\n        {buttons}\n      </div>\n    )\n  }\n}","import ItemAddForm from './item-add-form'\n\nexport default ItemAddForm","import React, { Component } from 'react'\n\nimport './item-add-form.css'\n\nexport default class ItemAddForm extends Component {\n\n  state = {\n    label: ''\n  }\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    this.props.onItemAdded(this.state.label)\n    this.setState({\n      label: ''\n    })\n  }\n\n\n  render() {\n    return (\n      <form className=\"item-add-form d-flex\"\n            onSubmit={this.onSubmit}>\n        <input type=\"text\"\n               className=\"form-control\"\n               onChange={this.onLabelChange}\n               placeholder=\"What needs to be done\"\n               value={this.state.label} />\n        <button\n          className=\"btn btn-outline-secondary\" >\n          Add Item\n        </button>\n      </form>\n    )\n  }\n}\n\n","import App from './app'\n\nexport default App","import React, { Component } from 'react'\n\nimport AppHeader from '../app-header'\nimport SearchPanel from '../search-panel'\nimport TodoList from '../todo-list'\nimport ItemStatusFilter from '../item-status-filter'\nimport ItemAddForm from '../item-add-form'\n\nimport './app.css'\n\nexport default class App extends Component {\n\n  maxId = 10\n\n  state = {\n    todoData: [\n      this.createTodoitem('Learn React'),\n      this.createTodoitem('Learn English'),\n      this.createTodoitem('Drink tea'),\n    ],\n    term: '',\n    filter: 'all'\n  }\n\n  createTodoitem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    }\n  }\n\n  deleteItem = (id) => {\n    this.setState(({todoData}) => {\n\n      const idx = todoData.findIndex((el) => el.id === id)\n\n      const newArray = [\n        ...todoData.slice(0, idx),\n        ...todoData.slice(idx + 1)\n      ]\n\n      return {\n        todoData: newArray\n      }\n    })\n  }\n\n  addItem = (text) => {\n    const newItem = this.createTodoitem(text)\n\n    this.setState(({todoData}) => {\n      const newArr = [\n        ...todoData,\n        newItem\n      ]\n\n      return {\n        todoData: newArr\n      }\n    })\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id)\n\n    // 1. update object\n    const oldItem = arr[idx]\n    const newItem = {\n      ...oldItem,\n      [propName]: !oldItem[propName]\n    }\n\n    // 2. construct new array\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ]\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important')\n      }\n    })\n  }\n\n  onToggleDone = (id) => {\n    this.setState(({todoData}) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'done')\n      }\n    })\n  }\n\n  onSearchChange = (term) => {\n    this.setState({ term })\n  }\n\n  onFilterChange = (filter) => {\n    this.setState({ filter })\n  }\n\n  search(arr, term) {\n    if(term.length === 0) {\n      return arr\n    }\n\n    return arr.filter((el) => el.label.toLowerCase().indexOf(term.toLowerCase()) > -1)\n  }\n\n  filter(arr, filter) {\n\n    switch(filter) {\n      case 'all':\n        return arr\n      case 'active':\n        return arr.filter((el) => !el.done)\n      case 'done':\n        return arr.filter((el) => el.done)\n      default:\n        return arr\n    }\n  }\n\n  render() {\n\n    const { todoData, term, filter } = this.state\n\n    const visibleItems = this.filter(this.search(todoData, term), filter)\n\n    const doneCount = todoData\n                      .filter((el) => el.done).length\n\n    const todoCount = todoData.length - doneCount\n\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader todo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel\n            onSearchChange={this.onSearchChange} />\n          <ItemStatusFilter\n            filter={filter}\n            onFilterChange={this.onFilterChange} />\n        </div>\n        <TodoList\n          todos={visibleItems}\n          onDeleted={ this.deleteItem }\n          onToggleDone={this.onToggleDone}\n          onToggleImportant={this.onToggleImportant}\n        />\n        <ItemAddForm onItemAdded={this.addItem} />\n      </div>\n    )\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/app'\n\nReactDOM.render(<App />,\n  document.getElementById('root'))"],"sourceRoot":""}